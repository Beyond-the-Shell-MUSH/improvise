Details:
 Comes installed with the following packages:
  * kernel, 1.0.7 (#2) Kernel Package
  * primitive, 0.0.2 (#20) Primitive Package
  * persistent, 0.0.1 (#35) Persistent Package
  * dialog, 0.0.1 (#39) Dialog, Web Server Package
  * dialog_extras, 0.0.1 (#49) Dialog, Extras
  * mustache, 0.0.1 (#54) Mustache Templating Language Package
  * identity, 0.0.1 (#58) Identity Package
  * player, 0.0.1 (#62) Player Package
 And a starter package:
  * application, 0.0.1 (#69) Application Package
FAQ:
 * How do I log in?
   Passkeys for the two built-in players/users are output to the console
   when the server loads the database.  Look for lines that begin with
   "PASSKEY for"...  The passkey is the long hexadecimal string.  The
   server starts listening on port 7777 by default.  Using telnet,
   connect to the running server and type "connect " followed by the
   hexadecimal string.  Ex:
     connect D210CA62C37E841CD6936146A9768EA9246D3A7917EDE3BFC1A29C63C058F783
   If successful, you'll be greeted by the string "*** Connected ***"
 * How do I see which packages are installed?
   Once logged in type:
     @list packages with $composed
   `$composed' is the reference to the package manager.  The command output
   lists the packages that are installed, as well as additional packages
   available at stunt.io.
 * How do I install new packages?
   Assuming package dependencies are met ("autoport" depends on the
   package "lambdacore" being installed first), type the following:
     @install <package> with $composed
 * How do I start the web server?
   Assuming the "dialog" package is installed (it is by default), type
   the following as a wizardly player:
     ; #70:start(<port>)
   #70 is the object number of the HTTP server object built from the
   HTTP server prototype and a few objects from the "dialog_extras"
   package (so you don't have to).  Stop the server with:
     ; #70:stop()
   Test the server by opening "http://localhost:<port>///objects/0" in a
   browser (yes, type three forward slashes -- this is the prefix for the
   built-in JSON database browser).  You'll see a JSON dump of object #0.
Check out:
 The GitHub source:
  * https://github.com/toddsundsted/stunt
 The Stunt site:
 * http://stunt.io
 * http://stunt.io/dated/hoisting-lambdacore
 * http://stunt.io/packages/primitive
